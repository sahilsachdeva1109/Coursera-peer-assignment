#Code for makeCacheMatrix
# operations 

makeCacheMatrix <- function(x = matrix()) {
  #null value is given to j
  j <- NULL
  #function is set for y to set the value for x and j to NULL
  set <- function(y){
  #here y value is given to x but in negative
  x <<- y
  j <<- NULL
  }
  #set the inverse the value of function
  get <- function()x
  setInverse <- function(inverse) j <<- inverse
  getInverse <- function() j 
  list(set = set, get = get, 
  setInverse = setInverse, 
  getInverse = getInverse)
}

#add the cache matrix gto solve the matrix

cacheSolve <- function(x, ...) {
## Return a matrix 
  j <- x$getInverse()
  if(!is.null(j)){
  message("getting cached data")
  return(j)
  }
  mat <- x$get()
  j <- solve(mat,...)
  x$setInverse(j)
  j
}
